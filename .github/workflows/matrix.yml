---
jobs:
  build:
    name: "${{ inputs.flags || 'Default' }}"
    runs-on: '${{ inputs.os }}'
    steps:
      - id: cache-perl
        name: Check perl Cache
        uses: actions/cache@v4
        with:
          key: '${{ inputs.os }}-perl-v${{ inputs.perl }}${{ inputs.flags }}'
          path: '~/perl5/'
      - if: "${{  steps.cache-perl.outputs.cache-hit != 'true' && inputs.os == 'windows-2019' }}"
        name: Init dev env on Windows
        run: |
          # skip installing perl if it is already installed.
          if (!(Test-Path "C:\strawberry\perl\bin")) {
            choco install strawberryperl
          }
          echo @"
          C:\strawberry\c\bin
          C:\strawberry\perl\site\bin
          C:\strawberry\perl\bin
          "@ |
            Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - if: "${{ steps.cache-perl.outputs.cache-hit != 'true' }}"
        name: 'Build perl ${{ inputs.perl }} from source'
        shell: bash
        run: |
          git clone --depth 1 --branch v${{inputs.perl}} https://github.com/Perl/perl5.git

          if [[ '${{ runner.os }}' == 'Windows' ]]; then
            cd perl5/win32
            gmake -Dinstallprefix=~/perl5 ${{ inputs.flags }} -j5 install
          else
            cd perl5
            sh Configure -de -Dinstallprefix=~/perl5 ${{ inputs.flags }}
            make -j5
            make install DESTDIR=~/perl5
          fi
      - id: version
        name: Report Perl Version
        shell: bash
        run: |

          if [[ '${{ runner.os }}' == 'Windows' ]]; then
            echo Windows
            set PATH=~/perl5/bin;%PATH%
          else
            echo Not Windows
            export PATH=~/perl5/bin:$PATH
          fi

          perl -V
#          ~/perl5/bin/perl -e 'print $^V' > test-output-${{ inputs.os }}-${{ inputs.perl }}${{ inputs.flags }}.txt
      #~ - name: Try it again...
        #~ run: perl -V
      - name: Upload results as artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          if-no-files-found: error
          name: 'test-output-${{ inputs.os }}-${{ inputs.perl }}${{ inputs.flags }}'
          path: 'test-output-${{ inputs.os }}-${{ inputs.perl }}${{ inputs.flags }}.txt'
          retention-days: 1
name: Matrix module
on:
  workflow_call:
    inputs:
      flags:
        required: true
        type: string
      os:
        required: true
        type: string
      perl:
        required: true
        type: string
